SELECT USER
FROM DUAL;
--==>> SCOTT

--○ 테이블 구성
CREATE TABLE TBL_STUDENT
(SID    NUMBER
, NAME  VARCHAR2(30)
, TEL VARCHAR2(40)
, CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);
--==>> Table TBL_STUDENT이(가) 생성되었습니다.

CREATE TABLE TBL_GRADE
(SID    NUMBER
, SUB1  NUMBER(3)
, SUB2  NUMBER(3)
, SUB3  NUMBER(3)
, CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
);
--==>> Table TBL_GRADE이(가) 생성되었습니다.

--○ 뷰 구성

/*
SELECT R.REGIONID, R.REGIONNAME
     , (SELECT COUNT(*)
        FROM EMPLOYEE
        WHERE REGIONID=R.REGIONID) AS DELCHECK
FROM REGION R;
*/
--○ STUDENTVIEW 생성
CREATE OR REPLACE VIEW STUDENTVIEW
AS 
SELECT S.SID, S.NAME, S.TEL
    , (SELECT COUNT(*)
       FROM EMPLOYEE
       WHERE S.SID=G.SID) AS SUB
FROM TBL_STUDENT S JOIN TBL_GRADE G
ON S.SID=G.SID;
--==>> View STUDENTVIEW이(가) 생성되었습니다.


/*
-- 2. 과정 정보 출력 VIEW 생성
CREATE OR REPLACE VIEW VIEW_PROFESSOR
AS
SELECT P.PRO_NAME "교수자명", S.SUB_NAME "배정된과목명", SL.SUB_STARTDATE "과목시작일"
    , SL.SUB_ENDDATE "과목종료일", B.BOOK_NAME "교재명", R.ROOM_NO "강의실명"
    , CASE WHEN SYSDATE - SL.SUB_STARTDATE < 0 THEN '강의 예정'
           WHEN SYSDATE - SL.SUB_ENDDATE <= 0 THEN '강의 중'
           WHEN SYSDATE - SL.SUB_ENDDATE > 0 THEN '강의 종료'
           ELSE '알 수 없음'
       END "강의진행여부"
FROM PROFESSOR P JOIN SUB_LIST SL
ON P.PRO_ID = SL.PRO_ID
    JOIN SUBJECT S
    ON SL.SUB_NO = S.SUB_NO
        JOIN BOOK B
        ON S.BOOK_NO = B.BOOK_NO
            JOIN CURRICULUM C
            ON SL.CUR_NO = C.CUR_NO
                JOIN ROOM R
                ON C.ROOM_NO = R.ROOM_NO;
                
SELECT *
FROM VIEW_PROFESSOR;
*/

--○ 입력, 출력까지...


--○ GRADEVIEW 생성
CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT SID, NAME, SUB1, SUB2, SUB3, (SUB1+SUB2+SUB3) "TOT", (SUB1+SUB2+SUB3)/3 "AVG"
     , CASE WHEN (SUB1<60) OR (SUB2<60) OR (SUB3<60) THEN '과락'
            WHEN (SUB1+SUB2+SUB3)/3 < 60 THEN '불합격'
            WHEN (SUB1+SUB2+SUB3)/3 >= 60 THEN '합격'
            ELSE '알 수 없음'
        END C
FROM TBL_GRADE G JOIN TBL_STUDENT S
ON G.SID = S.SID;


--------------------------------------------------------------------------------
--○ 함께 작성한 코드

SELECT USER
FROM DUAL;
--==>> SCOTT

--○ 실습 테이블 생성
CREATE TABLE TBL_STUDENT
(SID    NUMBER
, NAME  VARCHAR2(30)
, TEL VARCHAR2(40)
, CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);
--==>> Table TBL_STUDENT이(가) 생성되었습니다.

--○ 샘플 데이터 입력
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(1, '정가연', '010-1111-1111');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(2, '송해덕', '010-2222-2222');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(3, '이지영', '010-3333-3333');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(4, '이중호', '010-4444-4444');
INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES(5, '손범석', '010-5555-5555');
--==>> 1 행 이(가) 삽입되었습니다. * 5

--○ 확인
SELECT *
FROM TBL_STUDENT;

--○ 커밋
COMMIT;
--==>> 커밋 완료.

--○ 실습 테이블 생성
CREATE TABLE TBL_GRADE
(SID    NUMBER
, SUB1  NUMBER(3)
, SUB2  NUMBER(3)
, SUB3  NUMBER(3)
, CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
, CONSTRAINT GRADE_SID_FK FOREIGN KEY(SID)
             REFERENCES TBL_STUDENT(SID)
, CONSTRAINT GRADE_SUB1_CK CHECK(SUB1 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB2_CK CHECK(SUB2 BETWEEN 0 AND 100)
, CONSTRAINT GRADE_SUB3_CK CHECK(SUB3 BETWEEN 0 AND 100)
);
--==>> Table TBL_GRADE이(가) 생성되었습니다.

--○ 샘플 데이터 입력
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(1, 90, 80, 70);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(2, 70, 60, 80);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(3, 92, 81, 73);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(4, 55, 66, 77);
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES(5, 89, 91, 71);

--
DROP TABLE TBL_GRADE;

--○ 확인
SELECT *
FROM TBL_GRADE;
--==>>
/*
1	90	80	70
2	70	60	80
3	92	81	73
4	55	66	77
5	89	91	71
*/

--○ 커밋
COMMIT;
--===> 커밋 완료.

--○ 뷰 생성(STUDENTVIEW) , 다시 참고...
CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT SID, NAME, TEL
     , ( SELECT COUNT(*)
         FROM TBL_GRADE
         WHERE SID=S.SID) AS SUB
FROM TBL_STUDENT S;


--○ 뷰 생성(GRADEVIEW)

SELECT S.SID AS SID
     , S.NAME AS NAME
     , G.SUB1 AS SUB1
     , G.SUB2 AS SUB2
     , G.SUB3 AS SUB3
     , (G.SUB1 + G.SUB2 + G.SUB3) AS TOT
     , TRUNC((G.SUB1 + G.SUB2 + G.SUB3)/3) AS AVG
     , (CASE WHEN (G.SUB1 + G.SUB2 + G.SUB3)/3 < 60 THEN '불합격' 
             WHEN (G.SUB1<=40) OR (G.SUB2<=40) OR (G.SUB3<=40) THEN '과락'
             ELSE '합격' 
             END) AS CH
FROM TBL_STUDENT S JOIN TBL_GRADE G
ON S.SID = G.SID;

CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT S.SID AS SID
     , S.NAME AS NAME
     , G.SUB1 AS SUB1
     , G.SUB2 AS SUB2
     , G.SUB3 AS SUB3
     , (G.SUB1 + G.SUB2 + G.SUB3) AS TOT
     , TRUNC((G.SUB1 + G.SUB2 + G.SUB3)/3) AS AVG
     , (CASE WHEN (G.SUB1 + G.SUB2 + G.SUB3)/3 < 60 THEN '불합격' 
             WHEN (G.SUB1<=40) OR (G.SUB2<=40) OR (G.SUB3<=40) THEN '과락'
             ELSE '합격' 
             END) AS CH
FROM TBL_STUDENT S JOIN TBL_GRADE G
ON S.SID = G.SID;
--==>> View GRADEVIEW이(가) 생성되었습니다.
--@ 트렁케이트 사용! 테이블(DB)에서가 아니라 뷰에서 트렁케이트 쓰는게 더 좋음.
--@ DB에선 최대한 덜 정제된 것 사용하기.


--○ 뷰 조회
SELECT SID, NAME, TEL
FROM STUDENTVIEW;
--==>>
/*
1	정가연	010-1111-1111
2	송해덕	010-2222-2222
3	이지영	010-3333-3333
4	이중호	010-4444-4444
5	손범석	010-5555-5555
*/

--○ 뷰 조회
SELECT SID, NAME, SUB1, SUB2, SUB3, TOT, AVG, CH
FROM GRADEVIEW;
--==>>
/*
1	정가연	90	80	70	240	80	합격
2	송해덕	70	60	80	210	70	합격
3	이지영	92	81	73	246	82	합격
4	이중호	55	66	77	198	66	합격
5	손범석	89	91	71	251	83	합격
*/




